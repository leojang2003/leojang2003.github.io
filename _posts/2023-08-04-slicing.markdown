---
layout: post
title: Slicing
subtitle: 
tags: []
comments: true
---

一個 slice 指的是一個 list 元素的子集合，以 list 來說，slice 會是連續的，slice 的語法如下，從 start 開始，到 stop 前一個( stop 沒有包含)，step 指的是一次走幾格，預設是 1，3個值都可以是選填的。

```python
some_list[start:stop:step=1]
```

值得注意的是，slice 的索引，也可是負值的。

```python
正的索引   0    1    2    3    4    5    6 
          ↓    ↓    ↓    ↓    ↓    ↓    ↓  
        ['a', 'b', 'c', 'd', 'e', 'f', 'g']
          ↑    ↑    ↑    ↑    ↑    ↑    ↑
負的索引  -7   -6   -5   -4   -3   -2   -1 
```

<br/>

### 索引是正數的 slice 

start/stop 都在索引範圍內。

```python
a = ['a', 'b', 'c', 'd', 'e', 'f', 'g']

a[0:2] 
# ['a', 'b']
```

stop 超出範圍時，不管超出多少都一樣。

```python
a[3:10] 
# ['d', 'e', 'f', 'g']

a[3:100] 
# ['d', 'e', 'f', 'g']
```

因為 stop 的索引不包含，所以 start = stop 時回傳空集合。

```python
a[6:6] 
# []
```

如果 start 索引在序列的位置 > stop 索引在序列的位置，會回傳空集合，因為預設是向右走的，所以 stop 索引不可以小於 start 索引。step 如果設成負值的話就是另外一回事，下面會講。

```python
a[4:3] 
# []
```

<br/>

### 空的 start 或 stop

start 沒有值時等同從開始，stop 沒有值時等同到結束。

```python
a[:5] 
# ['a', 'b', 'c', 'd']

a[4:] 
# ['e', 'f', 'g']

a[:] 
# ['a', 'b', 'c', 'd', 'e', 'f', 'g']
```

<br/>

### 索引是負數的 slice

負數的索引，start/stop 都在範圍內，開始的索引必須比結束的索引小。

```python
a[-3:-1] 
# ['e', 'f']
```

開始的索引比結束的索引大，回傳空集合。

```python
a[-2:-3] 
# []
```

如果 start 索引在序列的位置 > stop 索引在序列的位置，會回傳空集合，注意這裡a[-4:4]是有值的，因為索引 -4 是在右邊數來第四個位置，索引 4 是右邊數來第三個，所以這樣做 slice 是可以的。

```python
a[-4:0] # []
a[-4:1] # []
a[-4:2] # []
a[-4:3] # []
a[-4:4] # ['d'] 
```

因為 stop 的索引不包含，所以以下是空集合。

```python
a[-2:-2] 
# []
```

負數索引也一樣，start 沒有值時等同從開始，stop 沒有值時等同到結束。

```python
a[:-4] 
# ['a', 'b', 'c']

a[-4:] 
# ['d', 'e', 'f', 'g']
```

<br/>

### 設定一次走幾格的 step 

預設的 step 是 1，也就是向右一次走一格。

```python
a = [0,1,2,3,4,5,6,7,8,9]

# 設定1等同預設
a[1:6:1]
# [1,2,3,4,5]
```

stride 設 2 結果如下

```python
a = [0,1,2,3,4,5,6,7,8,9]

# 隔一個取號
a[1:6:1]
# [1,3,5]
```

### 負的 stride


stride 設 -1 等同 reverse，如果 stride

```python
正的索引  0    1    2    3    4    5    6    7    8    9
          ↓    ↓    ↓    ↓    ↓    ↓    ↓    ↓    ↓    ↓
		 ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ← ←  
        [ 0,   1,   2,   3,   4,   5,   6,   7,   8,   9]
          ↑    ↑    ↑    ↑    ↑    ↑    ↑    ↑    ↑    ↑
負的索引 -10   -9   -8  -7   -6   -5   -4   -3   -2   -1 
```

```python
a = [0,1,2,3,4,5,6,7,8,9]

a[::-1]
# [9,8,7,6,5,43,2,1,0]
```

stride 設負值等同換成由右到左 traverse，所以 start 跟 end 的位置需要對調



```python
# 這樣不行
a[1:6:-1]
# []

# 調換 start / end 就可以了
a[6:1:-1]
# [6,5,4,3,2]
```

同樣如果索引是負值的話，

```python
a = [0,1,2,3,4,5,6,7,8,9]

# 這樣不行
a[1:6:-1]
# []

# 調換 start / end 就可以了
a[-4:-8:-1]
# [6,5,4,3,2]
```


<br/>
<br/>
<br/>
